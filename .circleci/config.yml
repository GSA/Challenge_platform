version: 2.1

orbs:
  cloudfoundry: circleci/cloudfoundry@1.0
  ruby: circleci/ruby@2.1.3
  node: circleci/node@5.2.0
  docker: circleci/docker@2.6.0

executors:
  test_executor:
    working_directory: ~/Challenge_platform
    docker:
      - image: cimg/ruby:3.2.4
        environment:
          RAILS_ENV: test
      - image: cimg/postgres:16.3
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: challenge_gov_test

commands:
  prepare_database:
    description: 'Prepare the test database'
    steps:
      - run: bundle exec rake db:setup

  build_assets:
    description: 'Install yarn modules and build assets'
    steps:
      - node/install:
          install-yarn: true
      - node/install-packages:
          pkg-manager: yarn
      - run: npx gulp copyAssets
      - run: npx gulp compile
      - run: yarn build
      - run: yarn build:css

jobs:
  checkout_code:
    executor:
      name: test_executor

    steps:
      - checkout

      - run:
          name: Install Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - save_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/Challenge_platform

  rspec:
    executor:
      name: test_executor

    parallelism: 1

    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}

      - ruby/install-deps:
          key: gems-ruby-3.2.4-v{{ .Environment.CACHE_VERSION }}

      - prepare_database

      - build_assets

      - run:
          name: Run Tests
          command: |
            mkdir /tmp/test-results
            ./cc-test-reporter before-build

            # Run Rspec tests
            bundle exec rspec --format progress \
                              --format RspecJunitFormatter \
                              --out /tmp/test-results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

            ./cc-test-reporter format-coverage \
              --output coverage/codeclimate.rspec.$CIRCLE_NODE_INDEX.3.2.4.json

      - persist_to_workspace:
          root: ~/Challenge_platform/coverage
          paths:
          - codeclimate.rspec.*.json

      # collect reports
      - store_test_results:
          path: /tmp/test-results

      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  report_coverage:
    executor:
      name: test_executor

    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}

      - attach_workspace:
          at: ~/Challenge_platform/coverage

      - run:
          name: Report coverage to Code Climate
          command: |
            ./cc-test-reporter sum-coverage \
              coverage/codeclimate.*.json \
              --output coverage/codeclimate_full_report.json

            ./cc-test-reporter upload-coverage --input coverage/codeclimate_full_report.json

  dev-deploy:
    parallelism: 1
    docker:
      - image: cimg/ruby:3.2.4
    steps:
      - checkout
      - run: bundle cache --all
      - node/install:
          install-yarn: true
      - node/install-packages:
          pkg-manager: yarn
      - run: npx gulp copyAssets
      - run: npx gulp compile
      - run: echo -e $DEV_PRIVATE_KEY > dev_key.pem
      - run: echo -e $DEV_PUBLIC_CERT > dev_cert.pem
      - run: echo 'export CF_PASSWORD=$CF_PASSWORD_DEV' >> $BASH_ENV
      - run: echo 'export CF_USERNAME=$CF_USERNAME_DEV' >> $BASH_ENV
      - run:
          name: Install Cloud Foundry CLI
          command: |
            sudo apt-get update
            sudo apt-get install -y ca-certificates jq
            sudo touch /etc/apt/sources.list.d/cloudfoundry-cli.list
            echo "deb [trusted=yes] https://packages.cloudfoundry.org/debian stable main" | sudo tee -a /etc/apt/sources.list.d/cloudfoundry-cli.list
            sudo apt-get update
            sudo apt-get install dpkg
            sudo apt-get install cf7-cli
      - cloudfoundry/auth:
          endpoint: "https://api.fr.cloud.gov"
          org: gsa-tts-innovation-challenge
          space: eval-dev
      - run: cf push challenge-dev --strategy rolling

workflows:
  version: 2
  test-and-deploy:
    jobs:
      - checkout_code
      - rspec:
          requires:
            - checkout_code
      - report_coverage:
          requires:
            - rspec
      - dev-deploy:
          requires:
            - rspec
          filters:
            branches:
              only: dev
